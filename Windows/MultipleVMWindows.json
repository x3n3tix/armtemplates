{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachines": {
      "type": "array",
      "metadata": {
        "description": "Names of the VMs"
      }
    },
    "vmLocation": {
      "type": "string",
      "allowedValues": [
        "Australia East",
        "australiaeast",
        "Australia Southeast",
        "australiasoutheast",
        "West US 2",
        "westus2"
      ],
      "metadata": {
        "description": "Location to deploy NIC, VM and its extensions"
      }
    },
    "batchSize": {
      "type": "int",
      "defaultValue": 50,
      "minValue": 1,
      "maxValue": 50,
      "metadata": {
        "description": "Number of simultaneous VMs to deploy per batch (Default = 50)."
      }
    },
    "osImage": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Link to existing OS Image to use for VM"
      }
    },
    "osDiskSize": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Size of the OS Disk (in GB)"
      }
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET"
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to use"
      }
    },
    "nicSuffix": {
      "type": "string",
      "defaultValue": "0001",
      "metadata": {
        "description": "Suffix format for end of NIC name (Default is '0001')"
      }
    },
    "adminUserName": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "diagStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing Boot Diag Storage Account to use during deployment"
      }
    },
    "diagExtensionVersion": {
      "type": "string",
      "defaultValue": "1.5",
      "metadata": {
        "description": "Version of the VM Diagnostics extension (ie. 1.5 for Windows or 2.3 for Linux)"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the KeyVault to place the volume encryption key"
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource group of the KeyVault"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Object with list of tags to add onto the NIC and VM"
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "OMS workspace ID"
      }
    },
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "OMS workspace name"
      }
    },
    "workspaceKey": {
      "type": "string",
      "metadata": {
        "description": "OMS workspace key"
      }
    },
    "certificateUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Url of the certificate with version in KeyVault e.g. https://testault.vault.azure.net/secrets/testcert/b621es1db241e56a72d037479xab1r7"
      }
    },
    "scriptUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Url of the custom script to be run."
      }
    },
    "scriptName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom script to be run."
      }
    },
    "scriptCommand": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom script to be run."
      }
    },
    "osPublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "OS Publisher of Marketplace image."
      }
    },
    "osOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Offer of Marketplace image."
      }
    },
    "osSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "SKU to use for Marketplace image"
      }
    },
    "osVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Version to use for Marketplace image"
      }
    },
    "storageSASToken": {
      "type": "securestring"
    }
  },
  "variables": {
    "vmCount": "[length(parameters('virtualMachines'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(parameters('virtualMachines')[copyIndex()]['Name'],'.deployVM')]",
      "apiVersion": "2015-01-01",
      "copy": {
        "name": "virtualMachinesCopy",
        "count": "[variables('vmCount')]",
        "mode": "serial",
        "batchSize": "[if(greater(parameters('batchSize'),variables('vmCount')), variables('vmCount'), parameters('batchSize'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat('https://azusydgit.blob.core.windows.net/templates/WindowsVM', if(not(empty(parameters('virtualMachines')[copyIndex()]['DataDisks'])), 'DataDisks', ''),'.json',parameters('storageSASToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('virtualMachines')[copyIndex()]['Name']]"
          },
          "vmSize": {
            "value": "[parameters('virtualMachines')[copyIndex()]['VMSize']]"
          },
          "osDiskSize": {
            "value": "[parameters('virtualMachines')[copyIndex()]['OSDiskSize']]"
          },
          "storageType": {
            "value": "[parameters('virtualMachines')[copyIndex()]['StorageType']]"
          },
          "availabilitySet": {
            "value": "[parameters('virtualMachines')[copyIndex()]['AvailabilitySet']]"
          },
          "dataDisks": {
            "value": "[parameters('virtualMachines')[copyIndex()]['DataDisks']]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "vmLocation": {
            "value": "[parameters('vmLocation')]"
          },
          "osImage": {
            "value": "[parameters('osImage')]"
          },
          "existingVirtualNetworkName": {
            "value": "[parameters('existingVirtualNetworkName')]"
          },
          "existingVirtualNetworkResourceGroup": {
            "value": "[parameters('existingVirtualNetworkResourceGroup')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "nicSuffix": {
            "value": "[parameters('nicSuffix')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "diagStorageAccountName": {
            "value": "[parameters('diagStorageAccountName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroup')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "workspaceName": {
            "value": "[parameters('workspaceName')]"
          },
          "workspaceKey": {
            "value": "[parameters('workspaceKey')]"
          },
          "certificateUrl": {
            "value": "[parameters('certificateUrl')]"
          },
          "scriptUri": {
            "value": "[parameters('scriptUri')]"
          },
          "scriptName": {
            "value": "[parameters('scriptName')]"
          },
          "scriptCommand": {
            "value": "[parameters('scriptCommand')]"
          },
          "osPublisher": {
            "value": "[parameters('osPublisher')]"
          },
          "osOffer": {
            "value": "[parameters('osOffer')]"
          },
          "osSKU": {
            "value": "[parameters('osSKU')]"
          },
          "osVersion": {
            "value": "[parameters('osVersion')]"
          },
          "storageSASToken": {
            "value": "[parameters('storageSASToken')]"
          }
        }
      }
    }
  ]
}
